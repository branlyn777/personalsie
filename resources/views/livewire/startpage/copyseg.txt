    
    Correcciones

    crea nuevo modal de subarea
    registro de empleado 
    contrato -> seleccion multiple de funciones
    crear una relacion entre cargo y area de trabajo al selecciionar un cargo filtrar areas de trabajo correspondientes
    corregir delatalle de empleados
    
    compleatdo
    
    Usuario Empleado
    cargos
    area de trabajo
    adelanto 
    permisos y licencias
    funciones

    /*Swal.fire({
        title: 'CONFIRMAR',
        text: "¿CONFIRMAS ELIMINAR  EL REGISTRO",
        icon: 'WARNING',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Aceptar'
    }).then(function(result){
        if(result.value){
            window.livewire.emit('deleteRow',id)
            swal.close()
        }
    })*/

    antiguedad de empleado -> no requerido
    permisos por usuarios

    https://temp-mail.org/es/10minutemail
    notificaciones de empleados a finalizacion

    geweti7750@cebaike.com
    Ab*123456789
    https://factorialhr.com/

    https://app.factorialhr.com/settings/task_templates/list

    gedenil543@ekbasia.com
    12345678
    para notificaciones de mailtrap


    https://www.youtube.com/watch?v=szhWxKzKvSA


    MAIL_MAILER=smtp
    MAIL_HOST=mailhog
    MAIL_PORT=1025
    MAIL_USERNAME=null
    MAIL_PASSWORD=null
    MAIL_ENCRYPTION=null
    MAIL_FROM_ADDRESS=null
    MAIL_FROM_NAME="${APP_NAME}"


    Solicitudes 
        tipo de Solicitudes
        seleccionar trabajador o empleado
        
        nombre de Solicitudes
        responsable
        motivo
        fecha
        horas
        comentarios



    notificaciones
    nuevos empleados
    finalizacion de contrato

    // videos de ejemplos de notificacione
    https://www.youtube.com/watch?v=OgmYk4xg66w

    https://www.youtube.com/watch?v=CKej3HvFi-8
    https://www.youtube.com/watch?v=6PplYQ8FhEc

    https://www.youtube.com/watch?v=jTFBJa0GDKw
    https://www.youtube.com/playlist?list=PLYO5TOinzgThezlG_wRY9Nmrqwq8oUthe






    // ejemplo de buscador de comboBox
    https://www.youtube.com/watch?v=ZWb3QlMOAmM



    ejemplo de compresion de imagen
    /*$customFileName = uniqid() . '_.' . $this->image->extension();
    $this->image->storeAs('public/employees', $customFileName);
    /*Image::make($request->image('image'))
        ->resize(1200, null, function ($constraint){ 
            $constraint->aspectRatio();
        })
        ->save($this->image);
    */

    //$nombre = Str::random(3) . '633608bc7af64_.jpg'; // nuevo nombre de la imagen
    /*$ruta = storage_path() . '\app\public\employees/' . $customFileName; // ruta de la imagen
    //dd($ruta);
    Image::make($request->file('image'))
        ->resize(1200, null, function ($constraint){ 
        $constraint->aspectRatio();
        })
    ->save($ruta);

           
        
    //$employ->image = $customFileName;
    //$employ->save();*/



    copia de seguridad
    if(strlen($this->search) > 0)
        {
            $data = Anticipo::join('employees as at', 'at.id', 'anticipos.empleado_id') // se uno amabas tablas
            ->join('contratos as ct', 'ct.id', 'anticipos.id')
            ->select('anticipos.*', 'at.name as empleado', 'at.contrato_id as contrato', 'ct.salario', 'anticipos.id as idAnticipo',
                DB::raw('0 as verificar'))
            ->where('at.name', 'like', '%' . $this->search . '%')   
            //->orWhere('at.contrato_id', 'like', '%' . $this->search . '%')         
            ->orderBy('at.name', 'asc')
            ->paginate($this->pagination);

            foreach ($data as $os)
            {
                //Obtener los servicios de la orden de servicio
                $os->verificar = $this->verificar($os->idAnticipo);
            }
        }
        else
            $data = Anticipo::join('employees as at', 'at.id', 'anticipos.empleado_id')
            ->join('contratos as ct', 'ct.id', 'anticipos.id')
            ->select('anticipos.*', 'at.name as empleado', 'at.contrato_id as contrato', 'ct.salario', 'anticipos.id as idAnticipo',
                DB::raw('0 as verificar'))
            ->orderBy('at.name', 'asc')
            ->paginate($this->pagination);

            foreach ($data as $os)
            {
                //Obtener los servicios de la orden de servicio
                $os->verificar = $this->verificar($os->idAnticipo);
            }

        return view('livewire.anticipos.component', [
            'anticipos' => $data,        // se envia anticipos
            'empleados' => Employee::orderBy('name', 'asc')->get()
            ])
        ->extends('layouts.theme.app')
        ->section('content');
    
    -----------------------------------------------------------------

    cambia combobox por un buscador en asistencias
    volver contratos a contratos independientes quitar el comboBox mantener el btn como crear nuevo contrato
        
    pagos adelantados no va en contratos porque son datos de contrato
    los anticipos o pagos de adelanto van en el formulario salarios o en el formulario donde se registra a quienes ya se relizo el pago correspondiente

    crear tabla de asistencias 
    nombre
    fecha
    estado (presente falta licencia otros)


    php artisan make:model "NOMBRE DE LA TABLA EN SINGULAR" -m 
    php artisan make:livewire nombre
    php artisan make:seeder "nombreSeeder" -> de cada tabla o migracion



    Ejemplo de pagina simple de recursos humanos
    http://programacionparacompartir.com/sis_recursoshh/index.php/login

    video de ejemplo de compresion de imagen
    https://www.youtube.com/watch?v=H601HZ5nZd0

    

    18 DE JULIO 2022
    18 DE AGOSTO
    18 DE SEP 
    18 DE OCTUBRE



    // empleados

    aumentar columna fotos
    puesto de trabajo
    estado civil

    detalle del empleado
    
    no aplica estos datos
        formacion
        titulacion
        cursos
        certificados
        conocimientos
        experiencias

    contrato
        fcha inico
        fecha fin
        descripcion
        -> no requerido = tipo de contrato
        notas
        -> agregar estado


    Pruebas de suma de fechas conversion
    //$fechaInicio =   '$dateAdmission';//'2020-8-30 00:00:00';
    //$fechaActual = Carbon::now();//'2022-12-31 00:00:00';//'date("Y-m-d")'; //Carbon::now();



    //$dateFrom = 
    //$date = Carbon::now();
    // $TiempoTranscurrido = Carbon::parse($date)->format('Y-m-d');
    // tiempo transcurrido de año mes y dia
        
    //$TiempoTranscurrido = $date->subYear(2021);
    //$TiempoTranscurrido = $date->subMonth(30);
    //$TiempoTranscurrido = $date->subDay(8);
    //$TiempoTranscurrido = Carbon::createFromDate(2020,30,8)->age;

	
        /*
        Carbon::setLocale('es');
        $TiempoTranscurrido = setlocale(LC_TIME, 'es_ES.utf8');

        $date = Carbon::now();
        $TiempoC = Carbon::parse($date)->format('Y-m-d');

        $fechaInicio = '$dateAdmission';
        $fechaActual = $TiempoC;

        //pruebadbhvdg

        $segundos = strtotime($fechaActual) - strtotime($fechaInicio);  // segundos
        $segRedondeados = floor($segundos);

        $minutos = $segRedondeados / 60;    // minutos
        $minRedondeados = floor($minutos);

        $horas = $minRedondeados / 60;  // horas
        $horasRedondeados = floor($horas);

        $dias = $horasRedondeados / 24;     // dias
        $diasRedondeados = floor($dias);    // para redondeo de un dia mas ceil()

        $meses = $diasRedondeados / 28;     // meses
        $mesesRedondeados = floor($meses);

        $años = $mesesRedondeados - 12;     // años
        $añosRedondeados = floor($años);

        //dd( $TiempoTranscurrido);
        if($añosRedondeados > 0){
            $TiempoTranscurrido = $añosRedondeados . " Años ". $mesesRedondeados . " Meses y ". $diasRedondeados . " Dias";
        }else{
            if($añosRedondeados < 1){
                $TiempoTranscurrido = $mesesRedondeados . " Meses y ". $diasRedondeados . " Dias";
            }else{
                $TiempoTranscurrido = $diasRedondeados . " Dias";
            }
        }*/


        https://es.stackoverflow.com/questions/348757/diferencia-de-d%C3%ADas-entre-dos-fechas
    
    //Devuelve el tiempo en minutos de una venta reciente
    public function Ejemplo($id)
    {
        //Variable donde se guardaran los minutos de diferencia entre el tiempo de una venta y el tiempo actual
        $minutos = -1;
        //Guardando el tiempo en la cual se realizo la venta
        $date = Carbon::parse(Employee::find($id)->created_at)->format('Y');
        //Comparando que el dia-mes-año de la venta sean iguales al tiempo actual
        if($date == Carbon::parse(Carbon::now())->format('Y'))
        {
            //Obteniendo la hora en la que se realizo la venta
            $hora = Carbon::parse(Sale::find($idventa)->created_at)->format('H');
            //Obteniendo la hora de la venta mas 1 para incluir horas diferentes entre una hora venta y la hora actual en el else
            $hora_mas = $hora + 1;
            //Si la hora de la venta coincide con la hora actual
            if($hora == Carbon::parse(Carbon::now())->format('H'))
            {
                //Obtenemmos el minuto de la venta
                $minutos_venta = Carbon::parse(Sale::find($idventa)->created_at)->format('i');
                //Obtenemos el minuto actual
                $minutos_actual = Carbon::parse(Carbon::now())->format('i');
                //Calculamos la diferencia
                $diferenca = $minutos_actual - $minutos_venta;
                //Actualizamos la variable $minutos por los minutos de diferencia si la venta fue hace 1 hora antes que la hora actual
                if($diferenca <= 60)
                {
                    $minutos = $diferenca;
                }
            }
            else
            {
                //Ejemplo: Si la hora de la venta es 14:59 y la hora actual es 15:01
                //Usamos la variable $hora_mas para comparar con la hora actual, esto para obtener solo a las ventas que sean una hora antes que la hora actual
                if($hora_mas == Carbon::parse(Carbon::now())->format('H'))
                {
                    //Obtenemmos el minuto de la venta con una hora antes que la hora actual
                    $minutos_venta = Carbon::parse(Sale::find($idventa)->created_at)->format('i');
                    //Obtenemos el minuto actual
                    $minutos_actual = Carbon::parse(Carbon::now())->format('i');
                    //Restamos el minuto de la venta con el minuto actual y despues le restamos 60 minutos por la hora antes añadida ($hora_mas)
                    $mv = (($minutos_venta - $minutos_actual) - 60) * -1;
                    //Actualizamos la variable $minutos por los minutos de diferencia si la venta fue hace 1 hora antes que la hora actual
                    if($mv <= 60)
                    {
                        $minutos = $mv;
                    }
                }
            }
        }

        
        return $minutos;
    }

    
    Tiempo Restante 
    tt = tiempo trascurrido = tiempo que esta hasta el momento
    tr = tiempo restante
    estadia = fehaInicio + fechaFinal
    tr = estadia - tt

    tt = 2 meses
    tr = 1
    estadia = 3 pasante
    tr = 3 - 2
    tiempo restante = tr = 1
      